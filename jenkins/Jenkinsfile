pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "dcerdassan/devopssnapfinance"
        BUILD_TAG = "${env.BUILD_NUMBER}"
    }

    stages {

        stage('Checkout') {
            steps {
                echo "üîÑ Clonando el repositorio desde GitHub..."
                git branch: 'main',
                    url: 'https://github.com/Alephdjcs/devops-challenge.git',
                    credentialsId: 'github-token'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    try {
                        echo "üî® Construyendo la imagen Docker..."
                        // Construye la imagen con la etiqueta del build
                        docker.build("${DOCKER_IMAGE}:${BUILD_TAG}", "./application")
                        echo "‚úÖ Imagen Docker construida: ${DOCKER_IMAGE}:${BUILD_TAG}"
                    } catch (err) {
                        error "‚ùå Fall√≥ la construcci√≥n de la imagen Docker: ${err}"
                    }
                }
            }
        }

        stage('Docker Login & Push') {
            steps {
                script {
                    withCredentials([usernamePassword(
                        credentialsId: 'dockerhub-creds',
                        usernameVariable: 'DOCKER_USER',
                        passwordVariable: 'DOCKER_PASS'
                    )]) {
                        try {
                            echo "üöÄ Logueando en Docker Hub..."
                            sh 'echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin'

                            echo "üì§ Subiendo la imagen a Docker Hub..."
                            sh "docker push ${DOCKER_IMAGE}:${BUILD_TAG}"
                            echo "‚úÖ Imagen subida correctamente: ${DOCKER_IMAGE}:${BUILD_TAG}"
                        } catch (err) {
                            error "‚ùå Fall√≥ el login o push a Docker Hub: ${err}"
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo "üéâ Pipeline completado exitosamente!"
        }
        failure {
            echo "‚ö†Ô∏è Pipeline fall√≥. Revisa los logs."
        }
    }
}
